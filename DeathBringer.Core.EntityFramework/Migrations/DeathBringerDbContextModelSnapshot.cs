// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Yred.Authentication.Relationals.Data.Contexts;

namespace DeathBringer.EntityFramework.Migrations
{
    [DbContext(typeof(DeathBringerDbContext))]
    partial class DeathBringerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DeathBringer.Terminal.BaseClasses.Prodotto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand");

                    b.Property<int>("CategoriaAppartenenzaId");

                    b.Property<DateTime>("DataCreazioneRecord");

                    b.Property<DateTime>("DataProduzione");

                    b.Property<DateTime>("DataUltimaModifica");

                    b.Property<string>("Descrizione");

                    b.Property<byte[]>("Foto");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("UtenteCreazioneRecord");

                    b.Property<string>("UtenteUltimaModificaRecord");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaAppartenenzaId");

                    b.ToTable("tabella_Prodotti");
                });

            modelBuilder.Entity("DeathBringer.Terminal.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCreazioneRecord");

                    b.Property<DateTime>("DataUltimaModifica");

                    b.Property<string>("Descrizione");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("UtenteCreazioneRecord");

                    b.Property<string>("UtenteUltimaModificaRecord");

                    b.HasKey("Id");

                    b.ToTable("tabella_Categorie");
                });

            modelBuilder.Entity("DeathBringer.Terminal.Entities.Utente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cap");

                    b.Property<string>("Citta");

                    b.Property<string>("Civico");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DataCreazioneRecord");

                    b.Property<DateTime>("DataUltimaModifica");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Indirizzo");

                    b.Property<bool>("IsAdministrator");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("UtenteCreazioneRecord");

                    b.Property<string>("UtenteUltimaModificaRecord");

                    b.HasKey("Id");

                    b.ToTable("tabella_Utenti");
                });

            modelBuilder.Entity("DeathBringer.Terminal.BaseClasses.Prodotto", b =>
                {
                    b.HasOne("DeathBringer.Terminal.Entities.Categoria", "CategoriaAppartenenza")
                        .WithMany("Prodotti")
                        .HasForeignKey("CategoriaAppartenenzaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
